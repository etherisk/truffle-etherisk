"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var Kindarisky = (function (_Pudding) {
    _inherits(Kindarisky, _Pudding);

    function Kindarisky() {
      _classCallCheck(this, Kindarisky);

      _get(Object.getPrototypeOf(Kindarisky.prototype), "constructor", this).apply(this, arguments);
    }

    return Kindarisky;
  })(Pudding);

  ;

  // Set up specific data for this class.
  Kindarisky.abi = [{ "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "join", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId1", "type": "uint256" }, { "name": "countryId2", "type": "uint256" }], "name": "is_neighbour", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "winner", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId1", "type": "uint256" }, { "name": "countryId2", "type": "uint256" }, { "name": "nAttackers", "type": "uint256" }], "name": "attack", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "initialiseCountry", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "getAvailableGames", "outputs": [{ "name": "result", "type": "int256[10]" }], "type": "function" }, { "constant": false, "inputs": [], "name": "KindaRisky", "outputs": [], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "playId", "type": "uint256" }], "name": "getPlay", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "numRowsMap", "type": "uint256" }], "name": "createGame", "outputs": [], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "getNumberOfArmies", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getNumberOfPlayers", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "playerId", "type": "uint256" }], "name": "getNumCountriesOwned", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "me", "type": "address" }], "name": "amIMemberOf", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId1", "type": "uint256" }, { "name": "countryId2", "type": "uint256" }, { "name": "nMovers", "type": "uint256" }], "name": "move", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "player", "type": "address" }], "name": "addPlayerToGame", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "claimReinforcement", "outputs": [], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "getCountryOwner", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getNbCountries", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "getNumberGames", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getArmies", "outputs": [{ "name": "result", "type": "uint256[256]" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "startGame", "outputs": [], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getOwners", "outputs": [{ "name": "result", "type": "uint256[256]" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "me", "type": "address" }], "name": "getMyInProgressGames", "outputs": [{ "name": "result", "type": "int256[10]" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getGameState", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }];
  Kindarisky.binary = "";

  if ("0xcd1316ee6f05fc1be98d277e9c2311c65037a9f7" != "") {
    Kindarisky.address = "0xcd1316ee6f05fc1be98d277e9c2311c65037a9f7";

    // Backward compatibility; Deprecated.
    Kindarisky.deployed_address = "0xcd1316ee6f05fc1be98d277e9c2311c65037a9f7";
  }

  Kindarisky.generated_with = "1.0.3";
  Kindarisky.contract_name = "Kindarisky";

  return Kindarisky;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.Kindarisky = factory;
}