"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var Kindarisky = (function (_Pudding) {
    _inherits(Kindarisky, _Pudding);

    function Kindarisky() {
      _classCallCheck(this, Kindarisky);

      _get(Object.getPrototypeOf(Kindarisky.prototype), "constructor", this).apply(this, arguments);
    }

    return Kindarisky;
  })(Pudding);

  ;

  // Set up specific data for this class.
  Kindarisky.abi = [{ "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "join", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId1", "type": "uint256" }, { "name": "countryId2", "type": "uint256" }], "name": "is_neighbour", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId1", "type": "uint256" }, { "name": "countryId2", "type": "uint256" }, { "name": "nAttackers", "type": "uint256" }], "name": "attack", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "initialiseCountry", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "getAvailableGames", "outputs": [{ "name": "result", "type": "int256[10]" }], "type": "function" }, { "constant": false, "inputs": [], "name": "KindaRisky", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "playId", "type": "uint256" }], "name": "getPlay", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "numRowsMap", "type": "uint256" }], "name": "createGame", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "getNumberOfArmies", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getNumberOfPlayers", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId1", "type": "uint256" }, { "name": "countryId2", "type": "uint256" }, { "name": "nMovers", "type": "uint256" }], "name": "move", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "player", "type": "address" }], "name": "addPlayerToGame", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "claimReinforcement", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "getCountryOwner", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": true, "inputs": [], "name": "getNumberGames", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "startGame", "outputs": [], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getGameState", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }];
  Kindarisky.binary = "6060604052610dff806100126000396000f3606060405236156100cf5760e060020a6000350463049878f381146100d15780630ba2f9371461012a57806329b62c2c1461014c5780632a197316146101b257806340a9eeff146101c6578063418928ae1461021757806344fb8b1d1461024e57806348e837b9146102975780634d4990b5146102c857806362436d9d146103215780638dafb2b31461033f5780639d36ac19146103a5578063ad34746314610403578063c2d167ee146104fe578063d08f023a14610583578063e5ed1d5914610599578063ffde0c74146105f3575b005b6105876004355b60008181526001602052604081206008015460ff16811461068a57604080517f67616d6520616c72656164792073746172746564000000000000000000000000815290519081900360140190a061033a565b6105876004356024356044355b6000818303600114156107c2575060016107bb565b6100cf60043560243560443560643560008481526001602081905260408220600801548291829160ff16146109ef57604080517f67616d65206e6f742072756e6e696e6700000000000000000000000000000000815290519081900360100190a061087c565b6100cf6004356024355b610ce182826102d2565b61061361014060405190810160405280600a905b60008152602001906001900390816101da575060009050805b600a81101561062d576000198382600a8110156100025760200201526001016101f3565b6100cf604080517f4372656174696e67204b696e64615269736b7921000000000000000000000000815290519081900360140190a0565b60043560009081526001602090815260408083206024358452600b01909152902054600160a060020a03165b60408051600160a060020a03929092168252519081900360200190f35b6100cf6004356000805460018181018355818352602052604090912060088101805460ff1916905561079c826100d8565b6105876004356024355b6000828152600160209081526040808320848452600a0190915281206003015480821415610d595760016000506000858152602001908152602001600020600050600301600050549150610795565b6105876004356000818152600160205260409020600501545b919050565b6100cf60043560243560443560643560008481526001602081905260408220600801548291829160ff161461088557604080517f67616d65206e6f742072756e6e696e6700000000000000000000000000000000815290519081900360100190a061087c565b6105876004356024355b600082815260016020526040812060080154819060ff16811461074257604080517f67616d6520616c72656164792073746172746564000000000000000000000000815290519081900360140190a0610795565b6100cf6004356024356000828152600160208181526040808420858552600a8101835290842060060154868552929091526004015490914283900391909104908111156104f8578060016000506000868152602001908152602001600020600050600a0160005060008581526020019081526020016000206000506003016000828282505401925050819055508060016000506000868152602001908152602001600020600050600401600050540260016000506000868152602001908152602001600020600050600a0160005060008581526020019081526020016000206000506006016000828282505401925050819055505b50505050565b61027a6004356024355b6000828152600160209081526040808320848452600a01909152812060030154818080831115610d615760016000506000878152602001908152602001600020600050600a01600050600086815260200190815260200160002060005060040160009054906101000a9004600160a060020a03169350610df6565b6000545b60408051918252519081900360200190f35b6100cf600435600081815260016020526040812060080154819060ff1681146106d057604080517f67616d6520616c72656164792073746172746564000000000000000000000000815290519081900360140190a061073d565b61058760043560008181526001602052604090206008015460ff1661033a565b60405180826101408083818460006004602df15093505050f35b506000545b806000141580156106435750600a82105b156106855760008181526001602052604081206008015460ff16141561067c57808383600a811015610002576020020152600191909101905b60001901610632565b505090565b604080517f6a6f696e696e672067616d65000000000000000000000000000000000000000081529051600c918190039190910190a06106c982326103af565b905061033a565b604080517f67616d65206973207374617274696e6721000000000000000000000000000000815290519081900360110190a05050600081815260016020819052604090912060088101805460ff1916909217909155426009820155600280820154600590920154910a9081045b505050565b505060008281526001602081815260408084206005810180548086018255808752600b929092018452918520805473ffffffffffffffffffffffffffffffffffffffff1916871790559386905291905254905b5092915050565b506005600382015560028101839055603c6004820155505050565b5060005b9392505050565b828203600114156107d5575060016107bb565b60008481526001602052604090206002015482840314156107f8575060016107bb565b60008481526001602052604090206002015483830314156107b7575060016107bb565b600382015484106108325760038201546000190193505b6003828101805486900390558101805485019055604080517f6d6f7665642061726d696573000000000000000000000000000000000000000081529051600c918190039190910190a05b50505050505050565b6000878152600160205260409020925061089f87876101bc565b6108a987866101bc565b50506000848152600a820160205260408082208583529120600482015432600160a060020a0390811691161461091357604080517f646f65736e2774206f776e20636f756e74727920310000000000000000000000815290516015918190039190910190a061087c565b600481015432600160a060020a0390811691161461096557604080517f646f65736e2774206f776e20636f756e74727920320000000000000000000000815290516015918190039190910190a061087c565b610970878787610137565b15156109b057604080517f636f756e7472696573206172656e2774206e65696768626f757273000000000081529051601b918190039190910190a061087c565b6000841161081b57604080517f30206d6f76657273000000000000000000000000000000000000000000000000815290519081900360080190a061087c565b60008781526001602052604090209250610a0987876101bc565b610a1387866101bc565b50506000848152600a820160205260408082208583529120600482015432600160a060020a03908116911614610a7a57604080517f646f65736e2774206f776e2061747461636b20636f756e7472790000000000008152905190819003601a0190a061087c565b60048181015490830154600160a060020a0390811691161415610ad157604080517f6f776e7320626f746820636f756e747269657300000000000000000000000000815290516013918190039190910190a061087c565b610adc878787610137565b1515610b1c57604080517f636f756e7472696573206172656e2774206e65696768626f757273000000000081529051601b918190039190910190a061087c565b60038201548410610b335760038201546000190193505b60008411610b7557604080517f61726d79206861732073697a652030000000000000000000000000000000000081529051600f918190039190910190a061087c565b600382810180548690039055810154841115610c0a57604080517f436f756e74727920636f6e717565726564000000000000000000000000000000815290519081900360110190a08160040160009054906101000a9004600160a060020a03168160040160006101000a815481600160a060020a03021916908302179055508060030160005054840381600301600050819055505b6003810154841415610c5357604080517f436f756e74727920626172656c7920646566656e646564000000000000000000815290516017918190039190910190a0600160038201555b6003810154841015610ca657604080517f436f756e74727920646566656e64656400000000000000000000000000000000815290519081900360100190a083816003016000828282505403925050819055505b604080517f41747461636b20636f6d706c6574656400000000000000000000000000000000815290519081900360100190a050505050505050565b6000838152600160209081526040808320858452600a01909152902060030155610d0b8282610508565b6000928352600160209081526040808520938552600a840190915290922060048101805473ffffffffffffffffffffffffffffffffffffffff19169093179092556009015460069190910155565b809150610795565b60008681526001602090815260409182902060050154825190880680825292519294508290030190a060016000506000878152602001908152602001600020600050600b01600050600083815260200190815260200160002060009054906101000a9004600160a060020a0316905080600160a060020a03166001026040518082815260200191505060405180910390a08093505b5050509291505056";

  if ("0xeb1bb702ae57dfa0de3bc1bc6a5767066fa7c5fa" != "") {
    Kindarisky.address = "0xeb1bb702ae57dfa0de3bc1bc6a5767066fa7c5fa";

    // Backward compatibility; Deprecated.
    Kindarisky.deployed_address = "0xeb1bb702ae57dfa0de3bc1bc6a5767066fa7c5fa";
  }

  Kindarisky.generated_with = "1.0.3";
  Kindarisky.contract_name = "Kindarisky";

  return Kindarisky;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.Kindarisky = factory;
}