"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var Kindarisky = (function (_Pudding) {
    _inherits(Kindarisky, _Pudding);

    function Kindarisky() {
      _classCallCheck(this, Kindarisky);

      _get(Object.getPrototypeOf(Kindarisky.prototype), "constructor", this).apply(this, arguments);
    }

    return Kindarisky;
  })(Pudding);

  ;

  // Set up specific data for this class.
  Kindarisky.abi = [{ "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "join", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId1", "type": "uint256" }, { "name": "countryId2", "type": "uint256" }], "name": "is_neighbour", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId1", "type": "uint256" }, { "name": "countryId2", "type": "uint256" }, { "name": "nAttackers", "type": "uint256" }], "name": "attack", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "id1", "type": "uint256" }, { "name": "id2", "type": "uint256" }], "name": "linkNeighbors", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "getAvailableGames", "outputs": [{ "name": "result", "type": "int256[10]" }], "type": "function" }, { "constant": false, "inputs": [], "name": "KindaRisky", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "playId", "type": "uint256" }], "name": "getPlay", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "numCountries", "type": "uint256" }], "name": "createGame", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "getNumberOfArmies", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getNumberOfPlayers", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [], "name": "getRandomBit", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "takeCountryCheat", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId1", "type": "uint256" }, { "name": "countryId2", "type": "uint256" }, { "name": "nArmy", "type": "uint256" }], "name": "move", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "player", "type": "address" }], "name": "addPlayerToGame", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "assignPlayersToCountries", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "getCountryOwner", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "seed", "type": "uint256" }], "name": "setSeed", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "getNumberGames", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [], "name": "getRandomNumber", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "startGame", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "roomNumber", "type": "uint256" }], "name": "joinWaitingRoom", "outputs": [], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getGameState", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }];
  Kindarisky.binary = "606060405265da23ccbe6d0b600255610a598061001c6000396000f3606060405236156101065760e060020a6000350463049878f381146101085780630ba2f9371461011a57806329b62c2c146101735780633c346fd4146101c557806340a9eeff1461047b578063418928ae146104cc57806344fb8b1d146104d157806348e837b9146105075780634d4990b51461056657806362436d9d1461059457806372b4e866146105b25780637bce0a56146105f05780638dafb2b31461062b5780639d36ac191461067d578063a06ff62c146106cd578063c2d167ee14610751578063c32a50f914610788578063d08f023a14610793578063dbdff2c11461079e578063e5ed1d59146107f2578063ed030e2e14610801578063ffde0c741461080b575b005b61082b60043560006108d58232610687565b61082b6004356024356044355b6000805b6000858152600160208181526040808420888552600701909152909120015481101561091657604060008181208382526002016020522054831415610923576001915061091b565b6101066004356024356044356064356000848152600160209081526040808320868452600781019092528083208584529220600483015491929132600160a060020a039081169116146109a457610957565b6101066004356024356044355b60016000506000848152602001908152602001600020600050600701600050600082815260200190815260200160002060005060016000506000858152602001908152602001600020600050600701600050600084815260200190815260200160002060005060020160005060008381526020019081526020016000206000506000820160005054816000016000505560018201600050548160010160005055600382016000505481600301600050556004820160009054906101000a9004600160a060020a03168160040160006101000a815481600160a060020a0302191690830217905550600582016000505481600501600050556006820160005054816006016000505590505060016000506000848152602001908152602001600020600050600701600050600083815260200190815260200160002060005060016000506000858152602001908152602001600020600050600701600050600083815260200190815260200160002060005060020160005060008481526020019081526020016000206000506000820160005054816000016000505560018201600050548160010160005055600382016000505481600301600050556004820160009054906101000a9004600160a060020a03168160040160006101000a815481600160a060020a03021916908302179055506005820160005054816005016000505560068201600050548160060160005055905050600160005060008481526020019081526020016000206000506007016000506000838152602001908152602001600020600050600101600081815054809291906001019190505550600160005060008481526020019081526020016000206000506007016000506000828152602001908152602001600020600050600101600081815054809291906001019190505550505050565b61083d61014060405190810160405280600a905b600081526020019060019003908161048f575060009050805b600a811015610874576000198382600a8110156100025760200201526001016104a8565b610106565b6108576004356024356000828152600160209081526040808320848452600801909152902054600160a060020a03165b92915050565b6101066004356000805460018181018355818352602052604082206002810184905590915b60028201548110156108dc57600081815260078301602052604081208281556004830160038201556005808201556006015560010161052c565b61082b6004356024356000828152600160209081526040808320848452600701909152902060030154610501565b61082b6004356000818152600160205260409020600301545b919050565b61082b600280546380000000808204604083041860108304186004830418838304908118909218600190811690910290911791829055908116145b90565b6004803560009081526001602090815260408083206024358452600701909152902001805432600160a060020a031991909116179055610106565b6101066004356024356044356064356000848152600160209081526040808320868452600781019092528083208584529220600483015491929132600160a060020a0390811691161461096057610957565b61082b6004356024355b60008281526001602081815260408084206003810180548086018255865260089190910183529084208054600160a060020a031916909517909455939091529091525490565b6101066004355b6000818152600160205260408120815b6002820154811015610910576003820154831061070057600092505b6000838152600883016020908152604080832054848452600786019092529091206004018054600160a060020a031916600160a060020a0392909216919091179055600192909201916001016106e4565b6108576004356024356000828152600160209081526040808320848452600701909152902060040154600160a060020a0316610501565b600435600255610106565b61082b6000546105ed565b61082b600080805b60208110156108cc5760028054638000000080820460408304186010830418600483041883830490811890921860019081169091029091178083551692909217909102906001016107a6565b610106600435610808816106d4565b6101066004355b50565b61082b60043560008181526001602052604090206006015460ff166105ad565b60408051918252519081900360200190f35b60405180826101408083818460006004602df15093505050f35b60408051600160a060020a03929092168252519081900360200190f35b506000545b8060001415801561088a5750600a82105b156108d05760008181526001602052604081206006015460ff1614156108c357808383600a811015610002576020020152600191909101905b60001901610879565b8192505b505090565b90506105ad565b6108e983600060016101d2565b6108f683600260036101d2565b61090383600160036101d2565b61091083600360006101d2565b50505050565b600091505b509392505050565b60010161012b565b600382015484106109425760038201546000190193505b60038281018054869003905581018054850190555b50505050505050565b60048181015490830154600160a060020a0390811691161461098157610957565b61098c878787610127565b151561099757610957565b6000841161092b57610957565b6109af878787610127565b15156109ba57610957565b600382015484106109d15760038201546000190193505b600084116109de57610957565b600382810180548690039055810154841115610a26576003810180546004848101549084018054600160a060020a031916600160a060020a0392909216919091179055850390555b6003810154841415610a3a57600160038201555b600381015484101561095757600301805493909303909255505050505056";

  if ("0xda8a53e8c27c4fbc694a394988a6a12c92325f24" != "") {
    Kindarisky.address = "0xda8a53e8c27c4fbc694a394988a6a12c92325f24";

    // Backward compatibility; Deprecated.
    Kindarisky.deployed_address = "0xda8a53e8c27c4fbc694a394988a6a12c92325f24";
  }

  Kindarisky.generated_with = "1.0.3";
  Kindarisky.contract_name = "Kindarisky";

  return Kindarisky;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.Kindarisky = factory;
}