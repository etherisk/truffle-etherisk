"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var Kindarisky = (function (_Pudding) {
    _inherits(Kindarisky, _Pudding);

    function Kindarisky() {
      _classCallCheck(this, Kindarisky);

      _get(Object.getPrototypeOf(Kindarisky.prototype), "constructor", this).apply(this, arguments);
    }

    return Kindarisky;
  })(Pudding);

  ;

  // Set up specific data for this class.
  Kindarisky.abi = [{ "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "join", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId1", "type": "uint256" }, { "name": "countryId2", "type": "uint256" }], "name": "is_neighbour", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "winner", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId1", "type": "uint256" }, { "name": "countryId2", "type": "uint256" }, { "name": "nAttackers", "type": "uint256" }], "name": "attack", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "initialiseCountry", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "getAvailableGames", "outputs": [{ "name": "result", "type": "int256[10]" }], "type": "function" }, { "constant": false, "inputs": [], "name": "KindaRisky", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "playId", "type": "uint256" }], "name": "getPlay", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "numRowsMap", "type": "uint256" }], "name": "createGame", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "getNumberOfArmies", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getNumberOfPlayers", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "playerId", "type": "uint256" }], "name": "getNumCountriesOwned", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "me", "type": "address" }], "name": "amIMemberOf", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "takeCountryCheat", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId1", "type": "uint256" }, { "name": "countryId2", "type": "uint256" }, { "name": "nMovers", "type": "uint256" }], "name": "move", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "player", "type": "address" }], "name": "addPlayerToGame", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "claimReinforcement", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }, { "name": "countryId", "type": "uint256" }], "name": "getCountryOwner", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getNbCountries", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "getNumberGames", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getArmies", "outputs": [{ "name": "result", "type": "uint256[256]" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "startGame", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getOwners", "outputs": [{ "name": "result", "type": "uint256[256]" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "me", "type": "address" }], "name": "getMyInProgressGames", "outputs": [{ "name": "result", "type": "int256[10]" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "gameId", "type": "uint256" }], "name": "getGameState", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }];
  Kindarisky.binary = "606060405261136f806100126000396000f3606060405236156101275760e060020a6000350463049878f381146101295780630ba2f937146101855780631cbeae5e146101bd57806329b62c2c1461023a5780632a197316146102a057806340a9eeff146102d7578063418928ae1461035757806344fb8b1d1461038f57806348e837b9146103d85780634d4990b51461040d57806362436d9d1461046357806369911f3c146104815780637b433df1146104c95780637bce0a561461051e5780638dafb2b3146105585780639d36ac19146105be578063ad3474631461061f578063c2d167ee1461071a578063cbae83341461079c578063d08f023a146107bf578063ddfaebae146107d5578063e5ed1d591461080f578063ee4525d514610879578063f2b8b2a6146108b7578063ffde0c7414610927575b005b6107c36004355b60008181526001602052604081206007015460ff1681146109af57604080517f67616d6520616c72656164792073746172746564000000000000000000000000815290516014918190039190910190a061047c565b6107c36004356024356044355b60008381526001602081905260408220810154908385031415610b9257808306818506149150610b8a565b6103bb600435600081815260016020526040812060078101548290819060ff166002141561135f575b600483015481101561135a576000818152600a840160209081526040808320546001870154600160a060020a0391909116808552600b8801909352922054909350600290910a14156113675781935061135f565b61012760043560243560443560643560008481526001602081905260408220600701548291829160ff1614610db857604080517f67616d65206e6f742072756e6e696e6700000000000000000000000000000000815290519081900360100190a0610870565b6101276004356024355b600082815260016020908152604080832084845260090190915281205414156111bf576111c38282610724565b61094761014060405190810160405280600a905b60008152602001906001900390816102eb575050600080545b806000141580156103155750600a82105b1561097c5760008181526001602052604081206007015460ff16141561034e57808383600a811015610002576020020152600191909101905b60001901610304565b604080517f4372656174696e67204b696e64615269736b792100000000000000000000000081529051610127916014908290030190a0565b60043560009081526001602090815260408083206024358452600a01909152902054600160a060020a03165b60408051600160a060020a03929092168252519081900360200190f35b610127600435600080546001908101808355808352602091909152604090912060078101805460ff19169055610b6a82610130565b6107c36004356024355b60008281526001602090815260408083208484526009019091528120548082141561130157600160005060008581526020019081526020016000206000506002016000505491506104c2565b6107c36004356000818152600160205260409020600401545b919050565b6107c36004356024356000828152600160209081526040808320848452600a8101835281842054600160a060020a0316808552600b90910190925290912054905b5092915050565b6107c36004356024355b6000805b6000848152600160205260409020600401548110156113495760406000818120838252600a016020522054600160a060020a038481169116141561135257600191506104c2565b6004356000908152600160208181526040808420602435855260090190915290912001805432600160a060020a0319909116179055610127565b61012760043560243560443560643560008481526001602081905260408220600701548291829160ff1614610bf557604080517f67616d65206e6f742072756e6e696e6700000000000000000000000000000000815290519081900360100190a0610870565b6107c36004356024355b600082815260016020526040812060070154819060ff168114610b2057604080517f67616d6520616c72656164792073746172746564000000000000000000000000815290516014918190039190910190a06104c2565b610127600435602435600082815260016020818152604080842085855260098101835290842060020154868552929091526003015490914283900391909104908111156107145780600160005060008681526020019081526020016000206000506009016000506000858152602001908152602001600020600050600001600082828250540192505081905550806001600050600086815260200190815260200160002060005060030160005054026001600050600086815260200190815260200160002060005060090160005060008581526020019081526020016000206000506002016000828282505401925050819055505b50505050565b6103bb6004356024355b60008281526001602090815260408083208484526009019091528120548180808311156113095760016000506000878152602001908152602001600020600050600901600050600086815260200190815260200160002060005060010160009054906101000a9004600160a060020a03169350611340565b6107c36004355b600081815260016020819052604090912001546002900a61047c565b6000545b60408051918252519081900360200190f35b61096160043561200060405190810160405280610100905b60008152602001906001900390816107ed579050506000600061120b846107a3565b6101276004356000818152600160205260408120600701548190819081908190819060ff1681146109f557604080517f67616d6520616c72656164792073746172746564000000000000000000000000815290516014918190039190910190a05b50505050505050565b61096160043561200060405190810160405280610100905b6000815260200190600190039081610891579050506000600060006000611247866107a3565b61094760043561014060405190810160405280600a905b60008152602001906001900390816108ce575050600080545b806000141580156108f85750600a82105b156109815760008181526001602081905260409091206007015460ff16148015610988575061098881856104d3565b6107c360043560008181526001602052604090206007015460ff1661047c565b60405180826101408083818460006004602df15093505050f35b6040518082612000808381846000600461030ff15093505050f35b505090565b5050919050565b156109a657808383600a811015610002576020020152600191909101905b600019016108e7565b604080517f6a6f696e696e672067616d65000000000000000000000000000000000000000081529051600c918190039190910190a06109ee82326105c8565b905061047c565b604080517f67616d65206973207374617274696e6721000000000000000000000000000000815290516011918190039190910190a0506000868152600160208190526040822060078101805460ff1916831790554260088201559081015460049190910154600290910a96509450848604935084860692505b84811015610870576000878152600160209081526040808320848452600a01909152902054600160a060020a0316915082811015610aef578360010160016000506000898152602001908152602001600020600050600b01600050600084600160a060020a0316815260200190815260200160002060005081905550610b18565b6000878152600160209081526040808320600160a060020a0386168452600b0190915290208490555b600101610a6e565b505060008281526001602081815260408084206004810180548086018255808752600a9290920184529185208054600160a060020a031916871790559386905291905254906104c2565b506005600282015560018101839055603c6003820155505050565b600091505b509392505050565b83830360011415610bab57808306818506149150610b8a565b600085815260016020819052604090912001548385031415610bd05760019150610b8a565b600085815260016020819052604090912001548484031415610b855760019150610b8a565b60008781526001602052604090209250610c0f87876102aa565b610c1987866102aa565b505060008481526009820160205260408082208583529120600182015432600160a060020a03908116911614610c8357604080517f646f65736e2774206f776e20636f756e74727920310000000000000000000000815290516015918190039190910190a0610870565b600181015432600160a060020a03908116911614610cd557604080517f646f65736e2774206f776e20636f756e74727920320000000000000000000000815290516015918190039190910190a0610870565b610ce0878787610192565b1515610d2057604080517f636f756e7472696573206172656e2774206e65696768626f757273000000000081529051601b918190039190910190a0610870565b60008411610d5f57604080517f30206d6f76657273000000000000000000000000000000000000000000000000815290519081900360080190a0610870565b81548410610d705781546000190193505b81548490038255805484018155604080517f6d6f7665642061726d69657300000000000000000000000000000000000000008152905190819003600c0190a050505050505050565b60008781526001602052604090209250610dd287876102aa565b610ddc87866102aa565b505060008481526009820160205260408082208583529120600182015432600160a060020a03908116911614610ec957604080517f646f65736e2774206f776e2061747461636b20636f756e7472790000000000008152905190819003601a0190a06040805132600160a060020a0316815290519081900360200190a08160010160009054906101000a9004600160a060020a0316600160a060020a03166001026040518082815260200191505060405180910390a0604080517f2d2d2d2d2d2d0000000000000000000000000000000000000000000000000000815290519081900360060190a0610870565b60018181015490830154600160a060020a0390811691161415610f2057604080517f6f776e7320626f746820636f756e747269657300000000000000000000000000815290516013918190039190910190a0610870565b610f2b878787610192565b1515610f6b57604080517f636f756e7472696573206172656e2774206e65696768626f757273000000000081529051601b918190039190910190a0610870565b81548410610f7c5781546000190193505b60008411610fbb57604080517f61726d79206861732073697a65203000000000000000000000000000000000008152905190819003600f0190a0610870565b8154849003825580548411156110d357604080517f436f756e74727920636f6e717565726564000000000000000000000000000000815290519081900360110190a060018281018054600160a060020a039081166000908152600b8701602052604080822080548601905593870154925490911681529190912054600290910a141561108a5760405180807f416c6c20636f756e747269657320636f6e717565726564000000000000000000815260200150601701905060405180910390a060078301805460ff191660021790555b60018181018054600160a060020a039081166000908152600b8701602052604090208054600019019055918401548154600160a060020a03191692169190911790558054840381555b805484141561111657604080517f436f756e74727920626172656c7920646566656e646564000000000000000000815290516017918190039190910190a0600181555b805484101561116657604080517f436f756e74727920646566656e64656400000000000000000000000000000000815290519081900360100190a083816000016000828282505403925050819055505b604080517f41747461636b20636f6d706c6574656400000000000000000000000000000000815290519081900360100190a050505050505050565b60008381526001602090815260408083208584526009019091529020555b5050565b6000838152600160208181526040808420868552600981019092529092209081018054600160a060020a03191690931790925560080154600291909101556111a18282610417565b9150600090505b818160ff1610156109815761122a848260ff16610417565b838261010081101561000257505060208202840152600101611212565b9350600091505b60008681526001602052604090206004015460ff831610156112a5576040600081812060ff8516808352600a91909101602090815283832054600160a060020a03168352869052919020556001919091019061124e565b5060005b838160ff1610156112c4578260006112cd888460ff16610724565b50505050919050565b600160a060020a031681526020019081526020016000206000505485826101008110156100025760200201526001016112a9565b8091506104c2565b5050600084815260016020908152604080832060048101548706808552600a9190910190925290912054600160a060020a03169250825b50505092915050565b600091506104c2565b6001016104d7565b600093505b505050919050565b6001016101e656";

  if ("0xf62810c143db583c77169e3aa12b348ae40c69be" != "") {
    Kindarisky.address = "0xf62810c143db583c77169e3aa12b348ae40c69be";

    // Backward compatibility; Deprecated.
    Kindarisky.deployed_address = "0xf62810c143db583c77169e3aa12b348ae40c69be";
  }

  Kindarisky.generated_with = "1.0.3";
  Kindarisky.contract_name = "Kindarisky";

  return Kindarisky;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.Kindarisky = factory;
}